@startuml powerbi

actor Cliente as cliente
participant "Power-BI/Dashboards" as bi #lightgreen
participant "tallos-chat-app-v2" as frontend #lightblue
participant "mis-power-bi-data" as backend #LightCoral
database "tallos-megasac" as db #LightYellow
database "redis" as redis #LightCoral

== Etapas para criação do aplicativo Power BI ==

activate frontend

cliente -> frontend: Configura e cria aplicativo Power BI (URL GET)
frontend --> cliente: Retorna URL do aplicativo com token de autenticação

deactivate frontend

== Etapas para validação da requisição ==
activate backend

bi -> backend: Faz request para URL com o token de autenticação

alt "Problemas na autenticação"
  backend --> bi: Retorna um erro - 401 (Unauthorized)
else "Autenticado com sucesso"
  activate redis

  backend -> redis: Valida se existe algum documento no Redis sobre o ator
  redis --> backend: Retorna se existe ou não

  deactivate redis

  == Etapas de retorno para o BI ==
  alt "O Rate limit foi atingido (Redis retornou um documento)"

    backend --> bi: Retorna um erro - 429 (Too Many Requests)

  else "O Rate limit não foi atingido (Redis não encontra o documento)"
    activate redis

    backend -> redis: Cria documento no Redis sobre o ator com expiração de 60 segundos

    deactivate redis
    
    backend -> backend: Valida dados via query params
    backend -> db: Realiza o find no banco de dados

    activate db

    db --> backend: Retorna os dados do banco de dados

    backend --> bi: Retorna os dados para o BI/Dashboard do cliente - 200 (OK)
    
    activate bi

    deactivate db
    
    deactivate backend
  end

  cliente <-- bi: Gera dashboard com os dados da Tallos

  deactivate bi
end


@enduml
